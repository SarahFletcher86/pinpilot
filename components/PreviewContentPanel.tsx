import React, { useMemo, useState } from 'react';
import { BrandingOptions, GeneratedContent } from '../types';
import { composeFinal } from '../utils/canvasRender';
import { generatePinContent } from '../services/geminiService';

export default function PreviewContentPanel({
  pinBase,           // resized 1000x1500 image dataURL or null
  options,
}:{
  pinBase: string | null;
  options: BrandingOptions;
}){
  const [finalImg, setFinalImg] = useState<string | null>(null);
  const [gen, setGen] = useState<GeneratedContent>({
    title:'Your Pin Title',
    description:'Pin description generated by AI',
    keywords:['pinterest','inspiration','ideas']
  });
  const [busy, setBusy] = useState(false);
  const hasBase = Boolean(pinBase);

  async function build(){
    if (!pinBase) return;
    const out = await composeFinal(pinBase, options);
    setFinalImg(out);
    return out;
  }

  async function onGenerate(){
    if (!pinBase) return;
    setBusy(true);
    try{
      const out = await composeFinal(pinBase, options);
      setFinalImg(out);
      const gc = await generatePinContent(out, {
        primary: options.colors.brand,
        accent: options.colors.accent,
        font: options.font,
        overlayText: options.overlayText
      });
      setGen(gc);
    }finally{
      setBusy(false);
    }
  }

  function download(){
    const src = finalImg || pinBase;
    if (!src) return;
    const a = document.createElement('a');
    a.href = src;
    a.download = 'pinpilot-branded.jpg';
    a.click();
  }

  const previewSrc = finalImg || pinBase;

  return (
    <div className="pp-card">
      <h3 className="pp-step">② Preview & Content</h3>

      <div className="preview-wrap">
        <div className="preview-stage">
          {previewSrc ? <img className="preview-img" src={previewSrc} alt="Preview"/> : <div className="preview-note">Upload an image to preview your design</div>}
        </div>
      </div>

      <div style={{display:'flex', gap:10, marginTop:12, flexWrap:'wrap'}}>
        <button className="pp-btn primary" disabled={!hasBase || busy} onClick={onGenerate}>
          {busy ? 'Generating…' : 'Generate Pin Content'}
        </button>
        <button className="pp-btn ghost" disabled={!hasBase} onClick={async()=>{await build(); download();}}>
          Download Branded Image
        </button>
      </div>

      <div className="pp-field" style={{marginTop:12}}>
        <div className="pp-label">Title</div>
        <input className="pp-input" value={gen.title} onChange={e=>setGen({...gen, title:e.target.value})}/>
      </div>
      <div className="pp-field">
        <div className="pp-label">Description</div>
        <textarea className="pp-textarea" value={gen.description} onChange={e=>setGen({...gen, description:e.target.value})}/>
      </div>
      <div className="pp-field">
        <div className="pp-label">Keywords / Tags (comma separated)</div>
        <input className="pp-input" value={gen.keywords.join(', ')} onChange={e=>setGen({...gen, keywords: e.target.value.split(',').map(s=>s.trim()).filter(Boolean)})}/>
      </div>

      <div className="pp-help">Powered by Google Gemini & Pinterest best-practices.</div>
    </div>
  );
}